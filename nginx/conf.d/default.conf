
map $https $isHttps {
    on          true;
    default     false;
}

map $arg_status $rspCode {
    "~^3[0-9]{2}$"  300;
    "~^4[0-9]{2}$"  400;
    "~^5[0-9]{2}$"  500;
    default         200;
}

server {
    server_name _;
    listen 80 default_server;

    # SSL configuration
    listen 443 ssl default_server;

    ssl_certificate /etc/nginx/default.crt;
    ssl_certificate_key /etc/nginx/default.key;

    set $rspBody '{
        "instance": {
            "hostname": "$hostname",
            "serverAddress": "$server_addr",
            "port": "$server_port"
        },
        "uri": {
            "httpVersion": "$server_protocol",
            "method": "$request_method",
            "scheme": "$scheme",
            "fullPath": "$request_uri",
            "path": "$uri",
            "queryString": "$args",
            "isHttps": $isHttps
        },
        "ssl": {
            "sslProtocol": "$ssl_protocol",
            "sslCipher": "$ssl_cipher"
        },
        "session": {
            "httpConnection": "$http_connection",
            "requestId": "$request_id",
            "connection": "$connection",
            "connectionNumber": "$connection_requests"
        },
        "headers": {
            "host": "$http_host",
            "userAgent": "$http_user_agent",
            "xForwardedFor": "$http_x_forwarded_for",
            "xForwardedProto": "$http_x_forwarded_proto"
        },
        "status": $rspCode
    }\n';

    if ($rspCode = 200) {
        return 200 $rspBody;
    }
    if ($rspCode = 300) {
        return 300 $rspBody;
    }
    if ($rspCode = 400) {
        return 400 $rspBody;
    }
    if ($rspCode = 500) {
        return 500 $rspBody;
    }
}
